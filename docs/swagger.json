{
  "swagger": "2.0",
  "info": {
    "title": "kameleo-local-api",
    "description": "You can use the following API endpoints to communicate with the local running Kameleo programmatically.",
    "termsOfService": "https://kameleo.io",
    "contact": {
      "name": "Kameleo Team",
      "url": "https://kameleo.io/contact"
    },
    "version": "v1"
  },
  "host": "localhost:5050",
  "schemes": [
    "http"
  ],
  "paths": {
    "/base-profile-search-parameters": {
      "get": {
        "tags": [
          "BaseProfile"
        ],
        "summary": "Get the possible values for base profile filtering. We can filter the available values. With this we can see for example that what languages of profiles do we have for Windows profiles with Chrome.",
        "operationId": "GetBaseProfileSearchParameters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deviceType",
            "description": "Filter option for the Device Type. Possible values are 'desktop', 'mobile'. For example set it to mobile if you only want to see what os families we have for mobile profiles.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "osFamily",
            "description": "Filter option for os family. Possible values are 'windows', 'macos', 'linux', 'android', 'ios'. For example set it to windows if you only want to see what languages we have for windows profiles.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "browserProduct",
            "description": "Filter option for browser product. Possible values are 'chrome', 'firefox', 'edge', 'safari'. For example set it to safari if you only want to see what os families we have for chrome profiles.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Filter option for os language. Use ISO 639-1 language code format. For example set it to en-gb if you only want to see what browser products we have for English profiles.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/BaseProfileSearchParameters"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/base-profiles": {
      "get": {
        "tags": [
          "BaseProfile"
        ],
        "summary": "Filtering base profiles with some criteria. It will return X base profiles. It is not an idempotent method. This means if you are calling it twice after each other it may return a different set of base profiles.",
        "operationId": "SearchBaseProfiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deviceType",
            "description": "Filter option for the Device Type. Possible values are 'desktop', 'mobile'.\r\nYou can also use a comma-separated list to provide more than one value.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "osFamily",
            "description": "Filter option for os family. Possible values are 'windows', 'macos', 'linux', 'android', 'ios'.\r\nYou can also use a comma-separated list to provide more than one value.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "browserProduct",
            "description": "Filter option for browser product. Possible values are 'chrome', 'firefox', 'edge', 'safari'.\r\nYou can also use a comma-separated list to provide more than one value.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Filter option for os language. Use ISO 639-1 language code format.\r\nFor example, set it to en-gb if you want to get only English profiles from Great-Britain.\r\nYou can also use a comma-separated list to provide more than one value.\r\nThis field also supports wildcard for the sublanguage part: to retrieve both en-us, en-gb, and en-ca profiles, use 'en-*' as value.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseProfilePreview"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/cookies": {
      "get": {
        "tags": [
          "Cookie"
        ],
        "summary": "Gets the list of the cookies of the profile.",
        "operationId": "ListCookies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrowserCookie"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cookie"
        ],
        "summary": "Adds a list of cookies to the profile. If cookies are already present for a domain, they will be overwritten.",
        "operationId": "AddCookies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CookieRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrowserCookie"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cookie"
        ],
        "summary": "Deletes the cookies of the profile.",
        "operationId": "DeleteCookies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/general/healthcheck": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Health check request to test if Kameleo has been started and accepting connections.",
        "operationId": "Healthcheck",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/general/user-info": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Provides information about the user.",
        "operationId": "GetUserInfo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/UserInfoResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/general/terminate": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Terminates the Kameleo session by deauthenticating and exiting the CLI. It is important to call it after operating with Kameleo, so other users of the team account won't be logged out.",
        "operationId": "TerminateApplication",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/general/test-proxy": {
      "post": {
        "tags": [
          "General"
        ],
        "summary": "Tests a provided proxy connection.",
        "operationId": "TestProxy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TestProxyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/TestProxyResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/TestProxyResponse"
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Gets a preview list about profiles that are currently in the system.",
        "operationId": "ListProfiles",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProfilePreview"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/new": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Creates a new profile based on a selected BaseProfile and inputs.",
        "operationId": "CreateProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Updates profile settings.",
        "operationId": "UpdateProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Returns a profile from the system.",
        "operationId": "ReadProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profile"
        ],
        "summary": "Removes profile from the system. When you are launching and stopping a big number of profiles for example for scraping it is recommended to call this after you have stopped the profile. This will free up disk space.",
        "operationId": "DeleteProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/status": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Returns the current status of the profile.",
        "operationId": "GetProfileStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StatusResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/start": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Starts a profile. The browser will be launched. In case of mobile profiles and external launcher types the external spoofing engine will be launched.\r\nIf successful, the profile's lifetime state will be 'running'. Otherwise the profile's lifetime state will be 'terminated'. During the api call the lifetime state can be 'starting' for a temporarily.",
        "operationId": "StartProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StatusResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Starts a profile, for desktop profiles additional WebDriver settings can be provided. The browser will be launched. In case of mobile profiles and external launcher types the external spoofing engine will be launched.\r\nIf successful, the profile's lifetime state will be 'running'. Otherwise the profile's lifetime state will be 'terminated'. During the api call the lifetime state can be 'starting' for a temporarily.",
        "operationId": "StartProfileWithWebDriverSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WebDriverSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StatusResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/stop": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Stops a profile. The browsers will be stopped. In case of mobile profiles and external launcher types the external spoofing engine will be stopped.\r\nIf successful, the profile's lifetime state will be 'terminated'. Otherwise the profile's lifetime state will be 'running'. During the api call the lifetime state can be 'terminating' for a temporarily.",
        "operationId": "StopProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/StatusResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/save": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Saves a profile to a file. It will create a .kameleo file to the given location. It will store all the profile settings, browsing data, cookies, history, bookmarks, installed extension / addons. Later it can be reloaded.",
        "operationId": "SaveProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SaveProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/duplicate": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Creates a duplicate of a loaded profile in memory. The created profile contains all the profile settings, browsing data, cookies, history, bookmarks and installed extensions. This operation does not perform any filesystem activity and will not affect your existing profile.",
        "operationId": "DuplicateProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "The unique identifier of the profile",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/load": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Loads a profile from a file. It will load the profile from a .kameleo file. It will load all the profile settings, browsing data, cookies, history, bookmarks, installed extension / addons.",
        "operationId": "LoadProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LoadProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          }
        }
      }
    },
    "/profiles/{guid}/upgrade": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Upgrades the profile to the latest available browser version from the server. The exact target of the upgrade depends on the profile's current device, browser, operating system, and language settings.",
        "operationId": "UpgradeProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ProblemResponse"
            }
          },
          "204": {
            "description": "No new browser version is available for this profile."
          },
          "409": {
            "description": "Cannot upgrade profile because it is running."
          }
        }
      }
    }
  },
  "definitions": {
    "AudioSpoofingType": {
      "description": "Tells the mode how the Audio will be spoofed. Possible values:\r\n'noise': Add some noise to the Audio generation\r\n'block': Completely block the Audio API\r\n'off': Turn off the spoofing, use the original settings",
      "enum": [
        "off",
        "noise",
        "block"
      ],
      "type": "string"
    },
    "BaseProfile": {
      "description": "Representation of a base profile which is used to build profiles from.",
      "required": [
        "browser",
        "device",
        "fonts",
        "id",
        "language",
        "os",
        "plugins",
        "resolution",
        "version"
      ],
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the base profile. As time passes new base profile versions will be introduced. It is recommended to use the latest one.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the base profile. You can use this as a reference to create a new profile from this base profile.",
          "type": "string",
          "example": "555b894595b5cd242ead1533218a5ee93dd7c7ebfbff4dccb80fdb112f6cda27"
        },
        "device": {
          "$ref": "#/definitions/Device"
        },
        "os": {
          "$ref": "#/definitions/Os"
        },
        "browser": {
          "$ref": "#/definitions/Browser"
        },
        "language": {
          "description": "Language of the base profile. Using ISO 639-1 language codes.",
          "type": "string",
          "example": "en-gb"
        },
        "resolution": {
          "description": "The screen size of the device in pixels",
          "type": "string",
          "example": "1920x1080"
        },
        "fonts": {
          "description": "A list of font types included in the profile",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Arial",
            "Tahoma"
          ]
        },
        "plugins": {
          "description": "A list of plugins included in the profile",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "internal-pdf-viewer",
            "internal-nacl-plugin"
          ]
        }
      }
    },
    "BaseProfilePreview": {
      "description": "A preview object of a searched base profile. This contains some information about the base profile that will help you choose the right one.",
      "required": [
        "browser",
        "device",
        "id",
        "language",
        "os"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the base profile. You can use this as a reference to create a new profile from this base profile.",
          "type": "string",
          "example": "BPID1CC227DG69B5M56E5DE4TW8P48B47NB8BB5967XEA501UZXP019FZGOX4A61"
        },
        "device": {
          "$ref": "#/definitions/Device"
        },
        "os": {
          "$ref": "#/definitions/Os"
        },
        "browser": {
          "$ref": "#/definitions/Browser"
        },
        "language": {
          "description": "Language of the base profile. Using ISO 639-1 language codes.",
          "type": "string",
          "example": "en-gb"
        }
      }
    },
    "BaseProfileSearchParameters": {
      "description": "Provides possible values for base profile filtering. For example it tells what os languages are available.",
      "required": [
        "browserProducts",
        "deviceTypes",
        "languages",
        "osFamilies"
      ],
      "type": "object",
      "properties": {
        "deviceTypes": {
          "description": "List of possible device types. Possible values are 'desktop', 'mobile'.",
          "type": "array",
          "items": {
            "description": "Type of the device. Possible values are: 'desktop', 'mobile'.",
            "type": "string"
          },
          "example": [
            "desktop",
            "mobile"
          ]
        },
        "osFamilies": {
          "description": "List of possible os families. Possible values are 'windows', 'macos', 'linux', 'android', 'ios'.",
          "type": "array",
          "items": {
            "description": "Family of the OS. Possible values are 'windows', 'macos', 'linux', 'android', 'ios'.",
            "type": "string"
          },
          "example": [
            "windows",
            "macos"
          ]
        },
        "browserProducts": {
          "description": "List of possible browser products. Possible values are 'chrome', 'firefox', 'edge', 'safari'.",
          "type": "array",
          "items": {
            "description": "Product of the browser. Possible values are 'chrome', 'firefox', 'edge', 'safari'.",
            "type": "string"
          },
          "example": [
            "chrome",
            "firefox"
          ]
        },
        "languages": {
          "description": "List of possible os languages. It using the ISO 639-1 language code format.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "en-gb"
          ]
        }
      }
    },
    "Browser": {
      "required": [
        "major",
        "product",
        "version"
      ],
      "type": "object",
      "properties": {
        "product": {
          "description": "Product of the browser. Possible values are 'chrome', 'firefox', 'edge', 'safari'.",
          "type": "string",
          "example": "chrome"
        },
        "major": {
          "format": "int32",
          "description": "Major version of the browser.",
          "type": "integer",
          "example": 81
        },
        "version": {
          "description": "Exact version of the browser.",
          "type": "string",
          "example": "81.0.4044"
        }
      }
    },
    "BrowserCookie": {
      "description": "Representation of a cookie.",
      "required": [
        "domain",
        "hostOnly",
        "httpOnly",
        "name",
        "path",
        "sameSite",
        "secure",
        "value"
      ],
      "type": "object",
      "properties": {
        "domain": {
          "description": "The domain attribute signifies the domain for which the cookie is valid and can be submitted with every request for this domain or its subdomains. If this attribute is not specified, then the hostname of the originating server is used as the default value.",
          "type": "string",
          "example": ".google.com"
        },
        "name": {
          "description": "The name for the Cookie.",
          "type": "string",
          "example": "_ga"
        },
        "path": {
          "description": "The path attribute indicates a URL path that must exist in the requested URL in order to send the Cookie header. The %x2F (\"/\") character is considered a directory separator, and subdirectories match as well.",
          "type": "string",
          "example": "/gmail/about"
        },
        "value": {
          "description": "The value of the Cookie.",
          "type": "string",
          "example": "GA1.2-3.982544754.9825342343"
        },
        "hostOnly": {
          "description": "Host Only cookie means that the cookie should be handled by the browser to the server only to the same host/server that firstly sent it to the browser.",
          "type": "boolean",
          "example": false
        },
        "httpOnly": {
          "description": "When this attribute is set, client-side scripts are not allowed to access the cookie.",
          "type": "boolean",
          "example": true
        },
        "secure": {
          "description": "A cookie with the Secure attribute is sent to the server only with an encrypted request over the HTTPS protocol, never with unsecured HTTP, and therefore can't easily be accessed by a man-in-the-middle attacker. Insecure sites (with http: in the URL) can't set cookies with the Secure attribute.",
          "type": "boolean",
          "example": true
        },
        "sameSite": {
          "description": "The sameSite attribute lets servers require that a cookie shouldn't be sent with cross-origin requests (where Site is defined by the registrable domain), which provides some protection against cross-site request forgery attacks (CSRF).\r\nIt takes three possible values: Strict, Lax, and None.With Strict, the cookie is sent only to the same site as the one that originated it; Lax is similar, with an exception for when the user navigates to a URL from an external site, such as by following a link; None has no restrictions on cross-site requests.",
          "type": "string",
          "example": "unspecified"
        },
        "expirationDate": {
          "format": "int64",
          "description": "This unix timestamp formatted attribute is used to set persistent cookies. It signifies how long the browser should use the persistent cookie and when the cookie should be deleted.\r\nIf this attribute is not specified, then the lifetime of the cookie is the same as that of browser session, i.e.it will be a non-persistent cookie.",
          "type": "integer",
          "readOnly": true,
          "example": 1568986993
        },
        "session": {
          "description": "Session cookies are deleted when the current session ends. The browser defines when the \"current session\" ends, and some browsers use session restoring when restarting, which can cause session cookies to last indefinitely long.",
          "type": "boolean",
          "readOnly": true,
          "example": false
        },
        "storeId": {
          "description": "The ID of the cookie store containing this cookie.",
          "type": "string",
          "readOnly": true,
          "example": "0"
        }
      }
    },
    "CanvasSpoofingType": {
      "description": "Tells the mode how the canvas will be spoofed. Possible values:\r\n'intelligent': Use some noise and in specific cases use the intelligent canvas spoofing. This will result non unique canvas fingerprints.\r\n'noise': Add some noise to the Canvas generation.\r\n'block': Completely block the 2D API.\r\n'off': Turn off the spoofing, use the original settings.",
      "enum": [
        "intelligent",
        "noise",
        "block",
        "off"
      ],
      "type": "string"
    },
    "CookieRequest": {
      "required": [
        "domain",
        "name",
        "path",
        "value"
      ],
      "type": "object",
      "properties": {
        "domain": {
          "description": "The domain attribute signifies the domain for which the cookie is valid and can be submitted with every request for this domain or its subdomains. If this attribute is not specified, then the hostname of the originating server is used as the default value.",
          "type": "string",
          "example": ".google.com"
        },
        "name": {
          "description": "The name for the Cookie.",
          "type": "string",
          "example": "_ga"
        },
        "path": {
          "description": "The path attribute indicates a URL path that must exist in the requested URL in order to send the Cookie header. The %x2F (\"/\") character is considered a directory separator, and subdirectories match as well.",
          "type": "string",
          "example": "/gmail/about"
        },
        "value": {
          "description": "The value of the Cookie.",
          "type": "string",
          "example": "GA1.2-3.982544754.9825342343"
        },
        "hostOnly": {
          "description": "Host Only cookie means that the cookie should be handled by the browser to the server only to the same host/server that firstly sent it to the browser.",
          "type": "boolean",
          "example": false
        },
        "httpOnly": {
          "description": "When this attribute is set, client-side scripts are not allowed to access the cookie.",
          "type": "boolean",
          "example": true
        },
        "secure": {
          "description": "A cookie with the Secure attribute is sent to the server only with an encrypted request over the HTTPS protocol, never with unsecured HTTP, and therefore can't easily be accessed by a man-in-the-middle attacker. Insecure sites (with http: in the URL) can't set cookies with the Secure attribute.",
          "type": "boolean",
          "example": true
        },
        "sameSite": {
          "description": "The sameSite attribute lets servers require that a cookie shouldn't be sent with cross-origin requests (where Site is defined by the registrable domain), which provides some protection against cross-site request forgery attacks (CSRF).\r\nIt takes three possible values: Strict, Lax, and None.With Strict, the cookie is sent only to the same site as the one that originated it; Lax is similar, with an exception for when the user navigates to a URL from an external site, such as by following a link; None has no restrictions on cross-site requests.",
          "type": "string",
          "example": "unspecified"
        },
        "expirationDate": {
          "format": "int64",
          "description": "This attribute is used to set persistent cookies. It signifies how long the browser should use the persistent cookie and when the cookie should be deleted.\r\nIf this attribute is not specified, then the lifetime of the cookie is the same as that of browser session, i.e.it will be a non-persistent cookie.",
          "type": "integer",
          "example": 1568986993
        }
      }
    },
    "CreateProfileRequest": {
      "required": [
        "audio",
        "baseProfileId",
        "canvas",
        "fonts",
        "geolocation",
        "passwordManager",
        "plugins",
        "proxy",
        "screen",
        "timezone",
        "webgl",
        "webRtc"
      ],
      "type": "object",
      "properties": {
        "baseProfileId": {
          "description": "The unique identifier of the base profile. This references the base profile which should be used to build the new profile.",
          "type": "string",
          "example": "555b894595b5cd242ead1533218a5ee93dd7c7ebfbff4dccb80fdb112f6cda27"
        },
        "name": {
          "description": "Sets a human readable name for the profile. The value obtained by file name for existing profiles. For new profiles the value is generated by random.",
          "type": "string"
        },
        "tags": {
          "description": "Use tags to categorize profiles by labeling them accordingly.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "facebook",
            "instagram"
          ]
        },
        "canvas": {
          "$ref": "#/definitions/CanvasSpoofingType"
        },
        "webgl": {
          "$ref": "#/definitions/WebglSpoofingTypeWebglSpoofingOptionsMultiLevelChoice"
        },
        "audio": {
          "$ref": "#/definitions/AudioSpoofingType"
        },
        "timezone": {
          "$ref": "#/definitions/TimezoneSpoofingTypeTimezoneMultiLevelChoice"
        },
        "geolocation": {
          "$ref": "#/definitions/GeolocationSpoofingTypeGeolocationSpoofingOptionsMultiLevelChoice"
        },
        "proxy": {
          "$ref": "#/definitions/ProxyConnectionTypeServerMultiLevelChoice"
        },
        "webRtc": {
          "$ref": "#/definitions/WebRtcSpoofingTypeWebRtcSpoofingOptionsMultiLevelChoice"
        },
        "fonts": {
          "$ref": "#/definitions/FontSpoofingTypeFontIListMultiLevelChoice"
        },
        "plugins": {
          "$ref": "#/definitions/PluginSpoofingTypePluginIListMultiLevelChoice"
        },
        "screen": {
          "$ref": "#/definitions/ScreenSpoofingTypeScreenSizeMultiLevelChoice"
        },
        "startPage": {
          "format": "uri",
          "description": "This website will be opened in the browser when the profile launches.",
          "type": "string",
          "example": "https://whoer.net/"
        },
        "passwordManager": {
          "$ref": "#/definitions/PasswordManagerType"
        },
        "extensions": {
          "description": "A list of abolute paths from where the profile should load extensions or addons when starting the browser. For chrome and edge use CRX3 format extensions. For firefox use signed xpi format addons.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "description": "A free text including any notes written by the user.",
          "type": "string",
          "example": "I used this profile for affiliate marketing."
        },
        "launcher": {
          "description": "The mode how the profile should be launched. It determines which browser to launch. This cannot be modified after creation. Possible values are 'automatic', 'chrome', 'chromium', 'firefox', 'edge', 'external'",
          "type": "string",
          "example": "automatic"
        }
      }
    },
    "Device": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the device. Possible values are: 'desktop', 'mobile'.",
          "type": "string",
          "example": "desktop"
        },
        "name": {
          "description": "Name of the device. This is only available for mobile profiles.",
          "type": "string",
          "readOnly": true,
          "example": "Samsung SM-A705FN"
        }
      }
    },
    "FontSpoofingType": {
      "description": "Tells the mode how the Fonts will be spoofed. Possible values:\r\n'enabled': Enable fonts spoofing. A list can be provided to override the fonts coming from the base profile.\r\n'disable': Disable fonts spoofing.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "FontSpoofingTypeFontIListMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/FontSpoofingType"
        },
        "extra": {
          "type": "array",
          "items": {
            "description": "Representing a font type",
            "type": "string"
          }
        }
      }
    },
    "GeolocationSpoofingOptions": {
      "description": "When the Geolocation spoofing is set to manual these extra settings will be used as well.",
      "required": [
        "latitude",
        "longitude"
      ],
      "type": "object",
      "properties": {
        "latitude": {
          "format": "float",
          "description": "From -90 to 90",
          "type": "number",
          "example": 59.43984
        },
        "longitude": {
          "format": "float",
          "description": "From -180 to 180",
          "type": "number",
          "example": 24.75815
        }
      }
    },
    "GeolocationSpoofingType": {
      "description": "Tells the mode how the Geolocation will be spoofed. Possible values:\r\n'automatic': Automatically set the values based on the IP address\r\n'manual': Manually set the longitude and latitude in the profile\r\n'block': Completely block the GeolocationAPI\r\n'off': Turn off the spoofing, use the original settings",
      "enum": [
        "automatic",
        "manual",
        "block",
        "off"
      ],
      "type": "string"
    },
    "GeolocationSpoofingTypeGeolocationSpoofingOptionsMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/GeolocationSpoofingType"
        },
        "extra": {
          "$ref": "#/definitions/GeolocationSpoofingOptions"
        }
      }
    },
    "LoadProfileRequest": {
      "description": "Tells where the profile should be loaded from",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path where the profile should be loaded from",
          "type": "string"
        }
      }
    },
    "Os": {
      "required": [
        "family",
        "platform",
        "version"
      ],
      "type": "object",
      "properties": {
        "family": {
          "description": "Family of the OS. Possible values are 'windows', 'macos', 'linux', 'android', 'ios'.",
          "type": "string",
          "example": "windows"
        },
        "version": {
          "description": "Version of the OS. For example it helps you determine the exact version of the macOS.",
          "type": "string",
          "example": "10.15.4"
        },
        "platform": {
          "description": "Platform of the OS. Tells if it runs on 64 bit or 32 bit or some other processor platform.",
          "type": "string",
          "example": "64"
        }
      }
    },
    "PasswordManagerType": {
      "description": "Tells if the browser should support credential saving. Possible values are:\r\n'enabled': Credential saving is enabled.\r\n'disabled': Credential saving is disabled.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "PluginSpoofingType": {
      "description": "Tells the mode how the Plugins will be spoofed.\r\n'enabled': Enable plugins spoofing. A list can be provided to EXCLUDE plugins from the plugins of the base profile.\r\n'disabled': Disable plugins spoofing.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "PluginSpoofingTypePluginIListMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/PluginSpoofingType"
        },
        "extra": {
          "type": "array",
          "items": {
            "description": "Representing a plugin",
            "type": "string"
          }
        }
      }
    },
    "Preference": {
      "description": "Represents a Key-Value pair where Value can be a string or a boolean or an integer",
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "description": "Key of the preference",
          "type": "string",
          "example": "profile.managed_default_content_settings.images"
        },
        "value": {
          "description": "Value of the preference. It can a string or a boolean or an integer",
          "example": 2
        }
      }
    },
    "ProblemResponse": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "error": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "ProfileLifetimeState": {
      "description": "Tells the lifetime state of the profile. This is important, because several actions can only be performed in a specific state. Possible values:\r\n'created': Profile is created but never started.\r\n'starting': Profile is starting the browser.\r\n'running': Profile is running the browser.\r\n'terminating': Profile is terminating the browser.\r\n'terminated': Profile is not running, but it has been run at least once.",
      "enum": [
        "created",
        "starting",
        "running",
        "terminating",
        "terminated"
      ],
      "type": "string"
    },
    "ProfilePersistenceState": {
      "description": "Tells if the profile is saved or not. Possible values:\r\n'unsaved': Profile is not saved\r\n'saved': Profile is saved and up-to-date",
      "enum": [
        "unsaved",
        "saved"
      ],
      "type": "string"
    },
    "ProfilePreview": {
      "description": "A preview about the profile with some of its properties.",
      "required": [
        "browser",
        "createdAt",
        "device",
        "id",
        "language",
        "launcher",
        "name",
        "os",
        "proxy",
        "status",
        "tags"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier of the profile",
          "type": "string",
          "example": "a7cafbbe-6bc0-4575-8c6e-f1adf391f180"
        },
        "name": {
          "description": "The name of the profile",
          "type": "string",
          "example": "mystic-turtle"
        },
        "tags": {
          "description": "Profile tags",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "facebook",
            "instagram"
          ]
        },
        "proxy": {
          "$ref": "#/definitions/ProxyConnectionTypeServerMultiLevelChoice"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Date when the profile was created.",
          "type": "string",
          "example": "2020-05-02T03:10:32.2452701+10:00"
        },
        "lastKnownPath": {
          "description": "An absolute path where the related .kameleo profile file was accessed lastly. This is updated when a profile is saved to a .kameleo file, or loaded from a .kameleo file.",
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/Device"
        },
        "os": {
          "$ref": "#/definitions/Os"
        },
        "browser": {
          "$ref": "#/definitions/Browser"
        },
        "language": {
          "description": "Language of the profile. This is derived from the base profile. Using ISO 639-1 language codes.",
          "type": "string",
          "example": "en-gb"
        },
        "launcher": {
          "description": "The mode how the profile should be launched. It determines which browser to launch. This cannot be modified after creation. Possible values are 'automatic', 'chrome', 'chromium', 'firefox', 'edge', 'external'",
          "type": "string",
          "example": "automatic"
        },
        "status": {
          "$ref": "#/definitions/StatusResponse"
        }
      }
    },
    "ProfileResponse": {
      "required": [
        "audio",
        "baseProfile",
        "canvas",
        "createdAt",
        "extensions",
        "fonts",
        "geolocation",
        "id",
        "launcher",
        "name",
        "notes",
        "passwordManager",
        "plugins",
        "proxy",
        "screen",
        "startPage",
        "status",
        "tags",
        "timezone",
        "webgl",
        "webRtc"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier of the profile",
          "type": "string",
          "example": "a7cafbbe-6bc0-4575-8c6e-f1adf391f180"
        },
        "name": {
          "description": "Profile name property. The value obtained by file name for existing profiles. For new profiles the value is generated by a random name generator.",
          "type": "string",
          "example": "mystic-turtle"
        },
        "tags": {
          "description": "Profile tags",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "facebook",
            "instagram"
          ]
        },
        "lastKnownPath": {
          "description": "An absolute path where the related .kameleo profile file was accessed lastly. This is updated when a profile is saved to a .kameleo file, or loaded from a .kameleo file.",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Date when the profile was created.",
          "type": "string",
          "example": "2020-05-02T03:10:32.2452701+10:00"
        },
        "baseProfile": {
          "$ref": "#/definitions/BaseProfile"
        },
        "canvas": {
          "$ref": "#/definitions/CanvasSpoofingType"
        },
        "webgl": {
          "$ref": "#/definitions/WebglSpoofingTypeWebglSpoofingOptionsMultiLevelChoice"
        },
        "audio": {
          "$ref": "#/definitions/AudioSpoofingType"
        },
        "timezone": {
          "$ref": "#/definitions/TimezoneSpoofingTypeTimezoneMultiLevelChoice"
        },
        "geolocation": {
          "$ref": "#/definitions/GeolocationSpoofingTypeGeolocationSpoofingOptionsMultiLevelChoice"
        },
        "proxy": {
          "$ref": "#/definitions/ProxyConnectionTypeServerMultiLevelChoice"
        },
        "webRtc": {
          "$ref": "#/definitions/WebRtcSpoofingTypeWebRtcSpoofingOptionsMultiLevelChoice"
        },
        "fonts": {
          "$ref": "#/definitions/FontSpoofingTypeFontIListMultiLevelChoice"
        },
        "plugins": {
          "$ref": "#/definitions/PluginSpoofingTypePluginIListMultiLevelChoice"
        },
        "screen": {
          "$ref": "#/definitions/ScreenSpoofingTypeScreenSizeMultiLevelChoice"
        },
        "startPage": {
          "description": "This website will be opened in the browser when the profile launches.",
          "type": "string",
          "example": "https://whoer.net/"
        },
        "passwordManager": {
          "$ref": "#/definitions/PasswordManagerType"
        },
        "extensions": {
          "description": "A list of extensions or addons that will be loaded to the profile when the profile is started. For chrome and edge use CRX3 format extensions. For firefox use signed xpi format addons.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "description": "A free text including any notes written by the user.",
          "type": "string",
          "example": "I used this profile for ad verification."
        },
        "launcher": {
          "description": "The mode how the profile should be launched. It determines which browser to launch. This cannot be modified after creation. Possible values are 'automatic', 'chrome', 'chromium', 'firefox', 'edge', 'external'",
          "type": "string",
          "example": "automatic"
        },
        "status": {
          "$ref": "#/definitions/StatusResponse"
        }
      }
    },
    "ProxyConnectionType": {
      "description": "Proxy connection settings of the profiles. Possible values:\r\n'none': Direct connection without any proxy.\r\n'http': Use a HTTP proxy for upstream communication.\r\n'socks5': Use a SOCKS5 proxy for upstream communication.\r\n'ssh': Use an SSH connection for upstream communication. Basically a SOCKS5 proxy created at the given SSH host.",
      "enum": [
        "none",
        "http",
        "socks5",
        "ssh"
      ],
      "type": "string"
    },
    "ProxyConnectionTypeServerMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/ProxyConnectionType"
        },
        "extra": {
          "$ref": "#/definitions/Server"
        }
      }
    },
    "SaveProfileRequest": {
      "description": "Tells where the profile should be saved",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path where the profile should be saved.",
          "type": "string"
        }
      }
    },
    "ScreenSpoofingType": {
      "description": "Tells the mode how the screen will be spoofed. Possible values:\r\n'automatic': Automatically override the screen resolution based on the Base Profile.\r\n'manual': Manually override the screen resolution.\r\n'off': Turn off the spoofing, use the original settings.",
      "enum": [
        "automatic",
        "manual",
        "off"
      ],
      "type": "string"
    },
    "ScreenSpoofingTypeScreenSizeMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/ScreenSpoofingType"
        },
        "extra": {
          "description": "The screen size of the device in pixels. For example: 1920x1080",
          "type": "string"
        }
      }
    },
    "Server": {
      "description": "Represents a server connection. It can be used as a proxy server connection as well.",
      "required": [
        "host",
        "port"
      ],
      "type": "object",
      "properties": {
        "host": {
          "description": "Gets or sets the hostname where the service is provided from.",
          "type": "string",
          "example": "127.0.0.1"
        },
        "port": {
          "format": "int32",
          "description": "Gets or sets the port where the service is provided from.",
          "type": "integer",
          "example": 9951
        },
        "id": {
          "description": "Gets or sets the identity information provided for the service. This could be a custom id or username or anything which identifies a resource on the remote service. Use it as a proxy username. This field is optional.",
          "type": "string",
          "example": "username"
        },
        "secret": {
          "description": "Gets or sets the shared secret between the client and the service provider. Use it as a proxy password. This field is optional.",
          "type": "string",
          "example": "password"
        }
      }
    },
    "StatusResponse": {
      "description": "Status information about the profile",
      "required": [
        "lifetimeState",
        "persistenceState"
      ],
      "type": "object",
      "properties": {
        "persistenceState": {
          "$ref": "#/definitions/ProfilePersistenceState"
        },
        "lifetimeState": {
          "$ref": "#/definitions/ProfileLifetimeState"
        },
        "externalSpoofingEnginePort": {
          "format": "int32",
          "description": "In case of running profiles which use an external browser this shows the connection port (for mobile profiles as well).",
          "type": "integer",
          "example": 34664
        }
      }
    },
    "TestProxyRequest": {
      "required": [
        "extra",
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/ProxyConnectionType"
        },
        "extra": {
          "$ref": "#/definitions/Server"
        }
      }
    },
    "TestProxyResponse": {
      "required": [
        "isValidProxy",
        "message"
      ],
      "type": "object",
      "properties": {
        "isValidProxy": {
          "description": "Tells weather the proxy is valid or not.",
          "type": "boolean",
          "example": true
        },
        "message": {
          "description": "A written message about the result of the test.",
          "type": "string",
          "example": "Valid SOCKS5 proxy."
        }
      }
    },
    "TimezoneSpoofingType": {
      "description": "Tells the mode how the Timezone will be spoofed. Possble values:\r\n'automatic': Timezone is automatically set by the IP\r\n'manual': Timezone is manually overridden in the profile\r\n'off': Turn off the spoofing, use the original settings",
      "enum": [
        "automatic",
        "manual",
        "off"
      ],
      "type": "string"
    },
    "TimezoneSpoofingTypeTimezoneMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/TimezoneSpoofingType"
        },
        "extra": {
          "description": "When the Timezone spoofing is set to manual the timezone in Iana format is required. For example: America/Grenada",
          "type": "string"
        }
      }
    },
    "UpdateProfileRequest": {
      "required": [
        "audio",
        "canvas",
        "fonts",
        "geolocation",
        "name",
        "passwordManager",
        "plugins",
        "proxy",
        "screen",
        "startPage",
        "timezone",
        "webgl",
        "webRtc"
      ],
      "type": "object",
      "properties": {
        "canvas": {
          "$ref": "#/definitions/CanvasSpoofingType"
        },
        "webgl": {
          "$ref": "#/definitions/WebglSpoofingTypeWebglSpoofingOptionsMultiLevelChoice"
        },
        "audio": {
          "$ref": "#/definitions/AudioSpoofingType"
        },
        "timezone": {
          "$ref": "#/definitions/TimezoneSpoofingTypeTimezoneMultiLevelChoice"
        },
        "geolocation": {
          "$ref": "#/definitions/GeolocationSpoofingTypeGeolocationSpoofingOptionsMultiLevelChoice"
        },
        "proxy": {
          "$ref": "#/definitions/ProxyConnectionTypeServerMultiLevelChoice"
        },
        "webRtc": {
          "$ref": "#/definitions/WebRtcSpoofingTypeWebRtcSpoofingOptionsMultiLevelChoice"
        },
        "fonts": {
          "$ref": "#/definitions/FontSpoofingTypeFontIListMultiLevelChoice"
        },
        "plugins": {
          "$ref": "#/definitions/PluginSpoofingTypePluginIListMultiLevelChoice"
        },
        "screen": {
          "$ref": "#/definitions/ScreenSpoofingTypeScreenSizeMultiLevelChoice"
        },
        "startPage": {
          "format": "uri",
          "description": "This website will be opened in the browser when the profile launches.",
          "type": "string",
          "example": "https://kameleo.io/"
        },
        "passwordManager": {
          "$ref": "#/definitions/PasswordManagerType"
        },
        "extensions": {
          "description": "A list of extensions or addons should be loaded to the browser when starting the profile. For extensions that are added now, it should be an absolute path.\r\nFor extensions already added to the profile in a previous update, the name is only enough.\r\nFor chrome and edge use CRX3 format extensions. For firefox use signed xpi format addons.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "description": "A free text including any notes written by the user.",
          "type": "string",
          "example": "I used this profile for affiliate marketing."
        },
        "name": {
          "description": "Profile name property. The value obtained by file name for existing profiles. For new profiles the value is generated by a random name generator.",
          "type": "string"
        },
        "tags": {
          "description": "Profile tags",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "facebook",
            "instagram"
          ]
        },
        "launcher": {
          "description": "The mode how the profile should be launched. It determines which browser to launch. This cannot be modified after creation. Possible values are 'automatic', 'chrome', 'chromium', 'firefox', 'edge', 'external'",
          "type": "string",
          "example": "automatic"
        }
      }
    },
    "UserInfoResponse": {
      "required": [
        "capabilities",
        "email",
        "emailConfirmed",
        "gracePeriod",
        "subscriptionEnd",
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "format": "uuid",
          "description": "The guid of the user.",
          "type": "string",
          "example": "054c78aa-efef-4a15-a348-cbf1766f8970"
        },
        "email": {
          "description": "The email address of the authenticated user.",
          "type": "string",
          "example": "user@email.com"
        },
        "emailConfirmed": {
          "description": "A boolean value indicating whether the email address is confirmed.",
          "type": "boolean",
          "example": true
        },
        "subscriptionEnd": {
          "format": "date-time",
          "description": "The end date of the authenticated user's current subscription.",
          "type": "string",
          "example": "2038-01-19T03:14:07Z"
        },
        "capabilities": {
          "description": "The capabilities that the authenticated user owns thanks to his current subscription.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "saveProfile",
            "automation"
          ]
        },
        "gracePeriod": {
          "description": "A boolean value indicates whether the subscription is in a grace period and should be renewed immediately.",
          "type": "boolean",
          "example": true
        },
        "lastAppLogin": {
          "format": "date-time",
          "description": "The last date when the user authenticated by the app.",
          "type": "string",
          "example": "2020-01-01T00:00:00Z"
        }
      }
    },
    "WebDriverSettings": {
      "description": "Additional arguments, options and preferences that can be passed to the started WebDriver and browser.",
      "type": "object",
      "properties": {
        "arguments": {
          "description": "Command line switches that can be passed to the browser at startup. It is applicable for both chromium based browsers and for firefox.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preferences": {
          "description": "List of preferences for browsers that can be passed at startup. In case of Chromium based options it will be a user profile preference. In case of Firefox profiles it will be a preference.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Preference"
          }
        },
        "additionalOptions": {
          "description": "List of additional Kameleo options that can be passed at startup. It applies to all desktop profiles. See Kameleo Help Center for available options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Preference"
          }
        }
      }
    },
    "WebRtcSpoofingOptions": {
      "description": "When the WebRTC spoofing is set to manual these extra settings will be used as well.",
      "required": [
        "privateIp",
        "publicIp"
      ],
      "type": "object",
      "properties": {
        "privateIp": {
          "description": "The WebRTC local IP address of the machine. It can be an obfuscated value as well.",
          "type": "string",
          "example": "2d2f78e7-1b1e-4345-a21b-07c904c98394.local"
        },
        "publicIp": {
          "description": "The WebRTC public IP address of the machine.",
          "type": "string",
          "example": "193.40.239.9"
        }
      }
    },
    "WebRtcSpoofingType": {
      "description": "Tells the mode how the WebRTC will be spoofed. Possible values:\r\n'automatic': Automatically set the webRTC public IP by the IP, and generates a random private IP like '2d2f78e7-1b1e-4345-a21b-07c904c98394.local'\r\n'manual': Manually override the webRTC public IP and private IP in the profile\r\n'block': Block the WebRTC functionality\r\n'off': Turn off the spoofing, use the original settings",
      "enum": [
        "automatic",
        "manual",
        "block",
        "off"
      ],
      "type": "string"
    },
    "WebRtcSpoofingTypeWebRtcSpoofingOptionsMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/WebRtcSpoofingType"
        },
        "extra": {
          "$ref": "#/definitions/WebRtcSpoofingOptions"
        }
      }
    },
    "WebglSpoofingOptions": {
      "description": "When the WebGL spoofing is set to noise these extra settings can be used to ovveride the values in the base profile.",
      "type": "object",
      "properties": {
        "vendor": {
          "description": "Unmasked vendor",
          "type": "string",
          "example": "Google Inc."
        },
        "renderer": {
          "description": "Unmasked renderer",
          "type": "string",
          "example": "ANGLE (Intel(R) HD Graphics 630 Direct3D11 vs_5_0 ps_5_0)"
        }
      }
    },
    "WebglSpoofingType": {
      "description": "Tells the mode how the WebGL will be spoofed. Possible values:\r\n'noise': Add some noise to the WebGL generation\r\n'block': Completely block the 3D API\r\n'off': Turn off the spoofing, use the original settings",
      "enum": [
        "noise",
        "block",
        "off"
      ],
      "type": "string"
    },
    "WebglSpoofingTypeWebglSpoofingOptionsMultiLevelChoice": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/WebglSpoofingType"
        },
        "extra": {
          "$ref": "#/definitions/WebglSpoofingOptions"
        }
      }
    }
  }
}